// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Instance {
  id            Int      @id @default(autoincrement())
  name          String
  apiBaseUrl    String   @map("api_base_url")
  apiKey        String   @map("api_key")
  authType      String   @default("API_KEY") @map("auth_type")
  createdAt     DateTime @default(now()) @map("created_at")
  ownerUserId   Int?     @map("owner_user_id")
  
  workflows     Workflow[]
  executions    Execution[]
  
  @@map("instances")
}

model Workflow {
  id          Int      @id @default(autoincrement())
  instanceId  Int      @map("instance_id")
  workflowId  String   @map("workflow_id")
  name        String
  active      Boolean  @default(false)
  tags        String?
  project     String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  instance    Instance @relation(fields: [instanceId], references: [id], onDelete: Cascade)
  executions  Execution[]
  
  @@map("workflows")
}

model Execution {
  id           Int       @id @default(autoincrement()) @map("exec_id")
  instanceId   Int       @map("instance_id")
  workflowId   Int       @map("workflow_id")
  n8nExecId    String?   @map("n8n_exec_id")
  status       String    @default("running")
  startTime    DateTime? @map("start_time")
  endTime      DateTime? @map("end_time")
  duration     Int?      // 毫秒
  input        String?   // JSON
  output       String?   // JSON
  errorMessage String?   @map("error_message")
  execSource   String    @default("manual") @map("exec_source")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  
  instance     Instance @relation(fields: [instanceId], references: [id], onDelete: Cascade)
  workflow     Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  
  @@map("executions")
}